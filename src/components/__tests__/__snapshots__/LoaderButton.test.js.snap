// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LoaderButton Component should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <_default
    block={true}
    bsSize="large"
    bsStyle="primary"
    isLoading={false}
    loadingText="Creatingâ€¦"
    text="Create"
    type="submit"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "active": false,
      "block": true,
      "bsClass": "btn",
      "bsSize": "large",
      "bsStyle": "primary",
      "children": Array [
        false,
        "Create",
      ],
      "className": "LoaderButton ",
      "disabled": false,
      "type": "submit",
    },
    "ref": null,
    "rendered": Array [
      false,
      "Create",
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "active": false,
        "block": true,
        "bsClass": "btn",
        "bsSize": "large",
        "bsStyle": "primary",
        "children": Array [
          false,
          "Create",
        ],
        "className": "LoaderButton ",
        "disabled": false,
        "type": "submit",
      },
      "ref": null,
      "rendered": Array [
        false,
        "Create",
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
